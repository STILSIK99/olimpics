#include <map>
#include <sstream>
#include <set>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

bool getResult (int invitedList, vector<string> dislikeList)
{
    // Write your code here...
    map<int, set<int>> noTgt;
    for (int i = 0; i < dislikeList.size(); ++i) {
        string s = dislikeList[i];
        set<int> n;
        while (s.find_first_of (',') != -1) {
            s[s.find_first_of (',')] = ' ';
        }
        s[1] = ' ';
        stringstream ss (s);
        int g;
        ss >> g;
        int f;
        while (ss >> f) {
            n.insert (f);
        }
        noTgt[g] = n;
    }
    vector<int> sit;
    for (int i = 1; i <= invitedList; i ++)
        sit.push_back (i);
    do {
        if (noTgt[sit[0]].count (sit[1]) != 0) continue;
        if (noTgt[sit[invitedList - 1]].count (sit[invitedList - 2]) != 0) continue;
        bool fl = false;
        for (int i = 1; i < invitedList - 1; ++i) {
            if (noTgt[sit[i]].count (sit[i - 1]) != 0 ||
                noTgt[sit[i]].count (sit[i + 1]) != 0) {
                fl = true;
                break;
            }
        }
        if (fl) continue;
        return true;

    } while (next_permutation (sit.begin(), sit.end()));
    return false;
}

void runCode()
{
    // Entrypoint to debug your function
}

int main()
{
    cout << getResult (4, {"1-2,3", "3-4"});
    return 0;
}
