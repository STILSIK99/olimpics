#include <bits/stdc++.h>
using namespace std;

void final (vector<float> &res, vector<vector<int>> uch, int hp1, int hp2)
{
    if (hp1 > hp2)
        for (auto x : uch[0]) res[x] += 1;
    if (hp1 < hp2)
        for (auto x : uch[1]) res[x] += 1;
    if (hp1 == hp2)
        for (int i = 0; i < 2; ++i)
            for (auto x : uch[i]) res[x] += 1. / (uch[0].size() + uch[1].size());
}


vector<int> getResult (vector<int> stam)
{
    vector<float> result (4, 0);
    vector<vector<int>> fights{{0, 1, 2, 3}, {0, 2, 1, 3}, {0, 3, 1, 2}};
    for (int i = 0; i < 3; ++i) {
        vector<int> uch1;
        if (stam[fights[i][0]] >= stam[fights[i][1]]) uch1.push_back (fights[i][0]);
        if (stam[fights[i][0]] <= stam[fights[i][1]]) uch1.push_back (fights[i][1]);
        vector<int> uch2;
        if (stam[fights[i][2]] >= stam[fights[i][3]]) uch2.push_back (fights[i][2]);
        if (stam[fights[i][2]] <= stam[fights[i][3]]) uch2.push_back (fights[i][3]);
        final (result, {uch1, uch2},
               abs (stam[fights[i][0]] - stam[fights[i][1]]),
               abs (stam[fights[i][2]] - stam[fights[i][3]]));
    }
    float sum = 0;
    for (auto x : result) sum += x;
    vector<int> ans;
    for (int i = 0; i < 4; ++i) {
        ans.push_back (int (100. * result[i] / sum + 0.5));
    }
    return ans;
}


int main()
{
    for (auto x : getResult ({1, 1, 1, 1}))
        cout << x << " ";
    return 0;
}
